{"ast":null,"code":"var _jsxFileName = \"/Users/kartikaypratapsingh/Desktop/React_tut/React-query/client/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useMutation } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const [text, setText] = useState('');\n  const todoMutation = useMutation({\n    mutationFn: async text => {\n      const response = await fetch('http://localhost:8000/todo/create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: text\n        })\n      });\n      return response.json();\n    }\n  });\n\n  const handleSubmit = () => {\n    if (text.trim()) {\n      todoMutation.mutate(text);\n      setText(''); // Clear input after submission\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"Ds5jlHNA8b/E/9WDOLIyIS941iw=\", false, function () {\n  return [useMutation];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useMutation","Form","text","setText","todoMutation","mutationFn","response","fetch","method","headers","body","JSON","stringify","title","json","handleSubmit","trim","mutate","e","target","value"],"sources":["/Users/kartikaypratapsingh/Desktop/React_tut/React-query/client/src/components/Form.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useMutation } from '@tanstack/react-query';\n\nfunction Form() {\n    const [text, setText] = useState('');\n    \n    const todoMutation = useMutation({\n        mutationFn: async (text) => {\n            const response = await fetch('http://localhost:8000/todo/create', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ title:text })\n            });\n            return response.json();\n        }\n    });\n\n    const handleSubmit = () => {\n        if (text.trim()) {\n            todoMutation.mutate(text);\n            setText(''); // Clear input after submission\n        }\n    };\n\n    return (\n        <div>\n            <input \n                type='text' \n                value={text} \n                onChange={(e) => setText(e.target.value)}\n            />\n            <button onClick={handleSubmit}>Create</button>\n        </div>\n    )\n}\n\nexport default Form\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,uBAA5B;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACZ,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAMK,YAAY,GAAGJ,WAAW,CAAC;IAC7BK,UAAU,EAAE,MAAOH,IAAP,IAAgB;MACxB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;QAC9DC,MAAM,EAAE,MADsD;QAE9DC,OAAO,EAAE;UACL,gBAAgB;QADX,CAFqD;QAK9DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UAAEC,KAAK,EAACX;QAAR,CAAf;MALwD,CAAtC,CAA5B;MAOA,OAAOI,QAAQ,CAACQ,IAAT,EAAP;IACH;EAV4B,CAAD,CAAhC;;EAaA,MAAMC,YAAY,GAAG,MAAM;IACvB,IAAIb,IAAI,CAACc,IAAL,EAAJ,EAAiB;MACbZ,YAAY,CAACa,MAAb,CAAoBf,IAApB;MACAC,OAAO,CAAC,EAAD,CAAP,CAFa,CAEA;IAChB;EACJ,CALD;;EAOA,oBACI;IAAA,wBACI;MACI,IAAI,EAAC,MADT;MAEI,KAAK,EAAED,IAFX;MAGI,QAAQ,EAAGgB,CAAD,IAAOf,OAAO,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;IAH5B;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI;MAAQ,OAAO,EAAEL,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GAjCQd,I;UAGgBD,W;;;KAHhBC,I;AAmCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}