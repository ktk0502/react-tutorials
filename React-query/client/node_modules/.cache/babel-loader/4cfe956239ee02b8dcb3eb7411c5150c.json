{"ast":null,"code":"\"use client\"; // src/useSuspenseInfiniteQuery.ts\n\nimport { InfiniteQueryObserver, skipToken } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nimport { defaultThrowOnError } from \"./suspense.js\";\n\nfunction useSuspenseInfiniteQuery(options, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\"skipToken is not allowed for useSuspenseInfiniteQuery\");\n    }\n  }\n\n  return useBaseQuery({ ...options,\n    enabled: true,\n    suspense: true,\n    throwOnError: defaultThrowOnError\n  }, InfiniteQueryObserver, queryClient);\n}\n\nexport { useSuspenseInfiniteQuery };","map":{"version":3,"mappings":";;AACA,SAASA,qBAAT,EAAgCC,SAAhC,QAAiD,sBAAjD;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,mBAAT,QAAoC,eAApC;;AAcO,SAASC,wBAAT,CAOLC,OAPK,EAcLC,WAdK,EAe0C;EAC/C,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,IAAKJ,QAAQK,OAAR,KAA4BT,SAAjC,EAA4C;MAC1CU,QAAQC,KAAR,CAAc,uDAAd;IACF;EACF;;EAEA,OAAOV,aACL,EACE,GAAGG,OADL;IAEEQ,SAAS,IAFX;IAGEC,UAAU,IAHZ;IAIEC,cAAcZ;EAJhB,CADK,EAOLH,qBAPK,EAQLM,WARK,CAAP;AAUF","names":["InfiniteQueryObserver","skipToken","useBaseQuery","defaultThrowOnError","useSuspenseInfiniteQuery","options","queryClient","process","env","NODE_ENV","queryFn","console","error","enabled","suspense","throwOnError"],"sources":["/Users/kartikaypratapsingh/Desktop/React_tut/React-query/client/node_modules/@tanstack/react-query/src/useSuspenseInfiniteQuery.ts"],"sourcesContent":["'use client'\nimport { InfiniteQueryObserver, skipToken } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport { defaultThrowOnError } from './suspense'\nimport type {\n  DefaultError,\n  InfiniteData,\n  InfiniteQueryObserverSuccessResult,\n  QueryClient,\n  QueryKey,\n  QueryObserver,\n} from '@tanstack/query-core'\nimport type {\n  UseSuspenseInfiniteQueryOptions,\n  UseSuspenseInfiniteQueryResult,\n} from './types'\n\nexport function useSuspenseInfiniteQuery<\n  TQueryFnData,\n  TError = DefaultError,\n  TData = InfiniteData<TQueryFnData>,\n  TQueryKey extends QueryKey = QueryKey,\n  TPageParam = unknown,\n>(\n  options: UseSuspenseInfiniteQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryKey,\n    TPageParam\n  >,\n  queryClient?: QueryClient,\n): UseSuspenseInfiniteQueryResult<TData, TError> {\n  if (process.env.NODE_ENV !== 'production') {\n    if ((options.queryFn as any) === skipToken) {\n      console.error('skipToken is not allowed for useSuspenseInfiniteQuery')\n    }\n  }\n\n  return useBaseQuery(\n    {\n      ...options,\n      enabled: true,\n      suspense: true,\n      throwOnError: defaultThrowOnError,\n    },\n    InfiniteQueryObserver as typeof QueryObserver,\n    queryClient,\n  ) as InfiniteQueryObserverSuccessResult<TData, TError>\n}\n"]},"metadata":{},"sourceType":"module"}